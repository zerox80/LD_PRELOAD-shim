#!/usr/bin/env bash
set -euo pipefail

# Installer for libinput_scroll_shim
# - builds the project
# - installs the .so to ~/.local/lib
# - writes ~/.config/environment.d/99-scrollscale.conf with absolute LD_PRELOAD path
# - optionally sets scaling env vars

SCALE=""
SCALE_X=""
SCALE_Y=""
SCALE_WHEEL=""
SCALE_FINGER=""
SCALE_CONT=""
DEBUG="0"
DISABLE="0"
CONF_DIR="$HOME/.config/environment.d"
CONF_FILE="$CONF_DIR/99-scrollscale.conf"
LIB_DST="$HOME/.local/lib/liblibinput_scroll_shim.so"

usage() {
  cat <<EOF
Usage: $0 [options]

Options:
  -s, --scale <f64>           Base scale for both axes (default 1.0 if not set)
  -x, --scale-x <f64>         Horizontal scale override
  -y, --scale-y <f64>         Vertical scale override
      --wheel <f64>           Additional multiplier for wheel source
      --finger <f64>          Additional multiplier for finger source
      --continuous <f64>      Additional multiplier for continuous/tilt sources
      --debug                 Enable debug logs (SCROLL_DEBUG=1)
      --disable               Start disabled (SCROLL_DISABLE=1)
  -h, --help                  Show this help

Examples:
  $0 --scale 0.5                  # halve scroll globally
  $0 -y 0.6 --finger 0.8          # vertical 0.6, finger source x0.8
EOF
}

# Parse args
ARGS=()
while [[ $# -gt 0 ]]; do
  case "$1" in
    -s|--scale)       SCALE="$2"; shift 2;;
    -x|--scale-x)     SCALE_X="$2"; shift 2;;
    -y|--scale-y)     SCALE_Y="$2"; shift 2;;
    --wheel)          SCALE_WHEEL="$2"; shift 2;;
    --finger)         SCALE_FINGER="$2"; shift 2;;
    --continuous)     SCALE_CONT="$2"; shift 2;;
    --debug)          DEBUG="1"; shift;;
    --disable)        DISABLE="1"; shift;;
    -h|--help)        usage; exit 0;;
    *)                ARGS+=("$1"); shift;;
  esac
done
set -- "${ARGS[@]:-}"

# Build
if ! command -v cargo >/dev/null 2>&1; then
  echo "Error: cargo not found. Install Rust toolchain (rustup) and re-run." >&2
  exit 1
fi
cargo build --release

# Install .so
install -Dm755 target/release/liblibinput_scroll_shim.so "$LIB_DST"

# Write environment.d config
mkdir -p "$CONF_DIR"
{
  echo "# Generated by libinput_scroll_shim installer"
  echo "# Absolute path is required; no shell expansion occurs here."
  echo "LD_PRELOAD=$LIB_DST"
  [[ -n "$SCALE" ]] && echo "SCROLL_SCALE=$SCALE"
  [[ -n "$SCALE_X" ]] && echo "SCROLL_SCALE_X=$SCALE_X"
  [[ -n "$SCALE_Y" ]] && echo "SCROLL_SCALE_Y=$SCALE_Y"
  [[ -n "$SCALE_WHEEL" ]] && echo "SCROLL_SCALE_WHEEL=$SCALE_WHEEL"
  [[ -n "$SCALE_FINGER" ]] && echo "SCROLL_SCALE_FINGER=$SCALE_FINGER"
  [[ -n "$SCALE_CONT" ]] && echo "SCROLL_SCALE_CONTINUOUS=$SCALE_CONT"
  [[ "$DEBUG" == "1" ]] && echo "SCROLL_DEBUG=1"
  [[ "$DISABLE" == "1" ]] && echo "SCROLL_DISABLE=1"
} > "$CONF_FILE"

# Apply for current session (note: GNOME Shell typically needs a re-login)
systemctl --user import-environment LD_PRELOAD SCROLL_SCALE SCROLL_SCALE_X SCROLL_SCALE_Y SCROLL_SCALE_WHEEL SCROLL_SCALE_FINGER SCROLL_SCALE_CONTINUOUS SCROLL_DEBUG SCROLL_DISABLE || true

echo "\nInstalled: $LIB_DST"
echo "Config:    $CONF_FILE"
if [[ -n "$SCALE$SCALE_X$SCALE_Y$SCALE_WHEEL$SCALE_FINGER$SCALE_CONT" ]]; then
  echo "Applied scales. You may need to log out/in for GNOME Shell to pick up LD_PRELOAD."
else
  echo "No scales set; default is SCROLL_SCALE=1.0. Edit $CONF_FILE to adjust."
fi
